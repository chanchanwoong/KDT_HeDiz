<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.config.HairshopMapper">
    
    <!--특정 미용실 조회-->
    <select id="findHairshop" resultType="HairshopDTO">
        select shop_seq, shop_name, shop_address, shop_intro, shop_image, shop_start, shop_end, shop_phone,
        shop_regular, shop_tag,
        (select avg(review_score) from t_review as b where b.shop_seq=a.shop_seq group by shop_seq ) as
        avg_review_score,
        (select count(review_score) from t_review as c where c.shop_seq=a.shop_seq) as count_review
        from T_HAIRSHOP as a
        where shop_seq=#{shop_seq}
    </select>

    <!--특정 미용실의 헤어스타일 조회-->
    <select id="findHairstyle" resultType="HairstyleDTO">
        select style_seq, style_name, style_gender, style_time, style_price, style_intro, style_image, cate_name
        from T_HAIRSTYLE inner join T_CATEGORY using(cate_seq)
        where shop_seq=#{shop_seq}
    </select>

    <!--특정 미용실 헤어스타일 중 특정 헤어스타일 정보 조회-->
    <select id="findHairstyleInfor" resultType="HairstyleDTO" parameterType="hashmap">
        select style_seq, style_name, style_gender, style_time, style_price, style_intro, style_image, cate_name
        from T_HAIRSTYLE inner join T_CATEGORY using(cate_seq)
        where shop_seq=#{shop_seq} and style_seq=#{style_seq}
    </select>

    <!--특정 미용실의 직원 조회-->
    <select id="findStaff" resultType="StaffDTO">
        select staff_seq, staff_role, staff_image, staff_intro, staff_nickname
        from T_STAFF
        where shop_seq=#{shop_seq}
    </select>

    <!--특정 미용실 리뷰 조회-->
    <select id="findReview" resultType="ReviewDTO">
        SELECT
        tr.review_seq,
        th.shop_name,
        cust_id,
        cu.cust_name,
        tr.review_score,
        tr.review_content,
        tr.review_photo,
        tr.review_date,
        tr.review_reply,
        s.staff_nickname,
        st.style_name
        FROM
        t_review tr
        LEFT JOIN t_hairshop th ON tr.shop_seq = th.shop_seq
        LEFT JOIN t_reservation re ON tr.reserv_seq = re.reserv_seq
        LEFT JOIN t_customer cu ON tr.reserv_seq = cu.cust_seq
        LEFT JOIN t_staff s ON re.staff_seq = s.staff_seq
        LEFT JOIN t_hairstyle st ON re.style_seq = st.style_seq
        WHERE
        tr.shop_seq = #{shop_seq}
        ORDER BY review_date DESC, review_score DESC
    </select>

    <!--예약_날짜 눌렀을 때 예약 가능 시간 확인-->
    <select id="reservationFilter" parameterType="hashmap" resultType="ReservationDTO">
        SELECT
        a.reserv_seq,
        a.cust_seq,
        c.staff_seq,
        c.staff_nickname,
        b.shop_start,
        a.reserv_date,
        a.reserv_time,
        d.style_time,
        TIME_FORMAT(
        SEC_TO_TIME( (TIME_TO_SEC(a.reserv_time) + TIME_TO_SEC(d.style_time)) MOD (24 * 60 * 60)),
        '%H:%i:%s'
        ) AS reserv_end_time,
        b.shop_end,
        (
        SELECT d.style_time
        FROM t_hairstyle d
        WHERE d.style_seq = #{style_seq}
        ) AS hope_style_time
        FROM
        t_staff c
        LEFT JOIN t_reservation a ON c.staff_seq = a.staff_seq AND a.reserv_date = #{day}
        LEFT JOIN t_hairshop b ON c.shop_seq = b.shop_seq
        LEFT JOIN t_hairstyle d ON a.style_seq = d.style_seq
        WHERE
        c.shop_seq = #{shop_seq}
        AND (a.reserv_time BETWEEN b.shop_start AND b.shop_end OR a.reserv_time IS NULL)
<!--        AND (CONCAT(a.reserv_date, ' ', a.reserv_time) >= NOW() OR a.reserv_date IS NULL)-->
        ORDER BY
        a.reserv_date,
        a.reserv_time
    </select>

    <!--결제 내역 저장-->
    <insert id="payment" parameterType="PaymentDTO">
        insert into t_payment(shop_seq, cust_seq, pay_price, pay_date)
        values(#{shop_seq}, #{cust_seq}, #{pay_price}, now())
    </insert>
</mapper>